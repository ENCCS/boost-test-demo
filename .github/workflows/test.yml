name: Testing

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    defaults:
      run:
        shell: bash -l {0}

    steps:
    - uses: actions/checkout@v2

    - name: Install Boost Test
      run: |
        if [ "${{ matrix.os }}" == "windows-latest" ]; then
           vcpkg install boost-test --triplet x64-windows
           echo "BUILD_TYPE=Release" >> $GITHUB_ENV
        else
           vcpkg install boost-test
           echo "BUILD_TYPE=Debug" >> $GITHUB_ENV
        fi
        vcpkg integrate install

    - name: Configure
      run: |
        if [ "${{ matrix.os }}" == "windows-latest" ]; then
           cmake -S. -Bbuild -DCMAKE_TOOLCHAIN_FILE="C:/vcpkg/scripts/buildsystems/vcpkg.cmake" -Ax64
        else
           cmake -S. -Bbuild -DCMAKE_BUILD_TYPE="$BUILD_TYPE" -DCMAKE_TOOLCHAIN_FILE="/usr/local/share/vcpkg/scripts/buildsystems/vcpkg.cmake"
        fi

    - name: Build
      run: |
        cmake --build build --config "$BUILD_TYPE"

    - name: Test
      run: |
        cd build
        ctest -C "$BUILD_TYPE" --output-on-failure --verbose

    - name: Setup python
      uses: actions/setup-python@v2
      if: contains(matrix.os, 'ubuntu')
      with:
        python-version: 3.8

    - name: Upload code coverage to coveralls
      if: contains(matrix.os, 'ubuntu')
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
      run: |
        python -m venv foo
        source foo/bin/activate
        pip install --upgrade pip setuptools cpp-coveralls
        coveralls -E ".*CMakeFiles.*" -E ".*test/.*.cpp.*" --exclude "foo"
