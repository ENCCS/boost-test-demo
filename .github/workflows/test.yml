name: Testing

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    defaults:
      run:
        shell: bash -l {0}

    steps:
    - uses: actions/checkout@v2

    - name: Cache conda
      uses: actions/cache@v1
      env:
        CACHE_NUMBER: 0  # Increase this value to reset cache if environment.yml has not changed
      with:
        path: ~/conda_pkgs_dir
        key:
          ${{ matrix.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('environment.yml') }}

    - name: Install Boost
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        auto-activate-base: false
        activate-environment: boost-test-demo
        environment-file: environment.yml
        channel-priority: true
        use-only-tar-bz2: true  # IMPORTANT: This needs to be set for caching to work properly!

    - name: Configure
      run: |
        cmake -S. -Bbuild -DCMAKE_BUILD_TYPE=Debug

    - name: Build
      run: |
        cmake --build build --config Debug

    - name: Test
      run: |
        cd build
        ctest -C Debug --output-on-failure --verbose

    - name: Setup python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Upload code coverage to coveralls
      if: contains(matrix.os, 'ubuntu')
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
      run: |
        echo $PWD
        python -m venv foo
        source foo/bin/activate
        pip install --upgrade pip setuptools cpp-coveralls
        coveralls -E ".*CMakeFiles.*" -E ".*test/.*.cpp.*" --exclude "foo" --exclude "build/_deps"
